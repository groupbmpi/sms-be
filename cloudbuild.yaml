# File: cloudbuild.yaml
steps:
    # build the container image
  - id: "build-image"
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', '${_IMAGE_NAME}', '.' ]
    # push the container image
  - id: "push-image"
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', '${_IMAGE_NAME}']
    # add the Cloud SQL proxy to the container image
  - id: "add-cloud-sql-proxy"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        echo "FROM $_IMAGE_NAME
        USER root
        COPY --from=gcr.io/cloud-sql-connectors/cloud-sql-proxy /cloud-sql-proxy /cloudsql/cloud-sql-proxy" > Dockerfile-proxy;
        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME_PROXY} .
    # deploy db migrations
  - id: "deploy-db-migrations"
    name: "${_IMAGE_NAME_PROXY}"
    env:
      - "DATABASE_NAME=$$MYSQL_DATABASE"
      - "DATABASE_USER=$$MYSQL_USER"
      - "DATABASE_HOST=127.0.0.1"
      - "DATABASE_PORT=$$MYSQL_PORT"
    secretEnv:
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PORT
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        /cloudsql/cloud-sql-proxy --port $$MYSQL_PORT ${_INSTANCE_CONNECTION_NAME} & sleep 3;
        export DATABASE_URL=mysql://$$MYSQL_USER:$$MYSQL_PASSWORD@localhost/$$MYSQL_DATABASE?host=/cloudsql/${_INSTANCE_CONNECTION_NAME}
        npx prisma migrate deploy
    # deploy to Cloud Run
  - id: "deploy-cloud-run"
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: /bin/bash
    args:
    - '-c'
    - |
      gcloud run deploy sms-api \
        --set-secrets=MYSQL_USER=MYSQL_USER:latest \
        --set-secrets=MYSQL_PASSWORD=MYSQL_PASSWORD:latest \
        --set-secrets=MYSQL_HOST=MYSQL_HOST:latest \
        --set-secrets=MYSQL_PORT=MYSQL_PORT:latest \
        --set-secrets=MYSQL_DATABASE=MYSQL_DATABASE:latest \
        --set-secrets=DATABASE_URL=DATABASE_URL:latest \
        --set-env-vars=NODE_ENV=production \
        --port 3002 \
        --image ${_IMAGE_NAME} \
        --platform managed \
        --region asia-southeast2 \
        --no-allow-unauthenticated \
        --add-cloudsql-instances ${_INSTANCE_CONNECTION_NAME}
    secretEnv:
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_HOST
      - MYSQL_PORT
      - DATABASE_URL

substitutions:
  _INSTANCE_CONNECTION_NAME: "${PROJECT_ID}:asia-southeast2:sms-database"
  _IMAGE_NAME: "gcr.io/${PROJECT_ID}/sms-api"
  _IMAGE_NAME_PROXY: "gcr.io/${PROJECT_ID}/sms-api-proxy"

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/DATABASE_URL/versions/latest
    env: 'DATABASE_URL'
  - versionName: projects/${PROJECT_ID}/secrets/MYSQL_USER/versions/latest
    env: 'MYSQL_USER'
  - versionName: projects/${PROJECT_ID}/secrets/MYSQL_PASSWORD/versions/latest
    env: 'MYSQL_PASSWORD'
  - versionName: projects/${PROJECT_ID}/secrets/MYSQL_PORT/versions/latest
    env: 'MYSQL_PORT'
  - versionName: projects/${PROJECT_ID}/secrets/MYSQL_DATABASE/versions/latest
    env: 'MYSQL_DATABASE'
  - versionName: projects/${PROJECT_ID}/secrets/MYSQL_HOST/versions/latest
    env: 'MYSQL_HOST'

options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
