// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Kategori {
  PEMERINTAH
  LEMBAGASWADAYAMASYARAKAT
  INSTITUSIPENDIDIKAN
  DUNIAUSAHA
  MEDIA
  MASYARAKATTERDAMPAK
}

enum StatusKegiatan {
  SUDAHTERLAKSANA
  BELUMTERLAKSANA
  SEDANGBERJALAN
  TAHAPKOORDINASI
  SEDANGTERKENDALA
}

//TODO: Update enum
enum KategoriMasalah {
  MASALAH
}

model Testing {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  namaLengkap String @db.VarChar(255)
  alamat      String @db.VarChar(255)
  email       String @unique @db.VarChar(255)
  noHandphone String @unique @db.VarChar(255)
  linkFoto    String @db.Text

  kegiatan LaporanKegiatan[]
  berita   Berita[]
  masalah  LaporanMasalah[]

  lembaga    Lembaga @relation(fields: [lembaga_id], references: [id])
  lembaga_id Int
  role       Role    @relation(fields: [role_id], references: [id])
  role_id    Int

  is_verified Boolean @default(false)
  is_accepted Boolean @default(false)
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role  String @db.VarChar(255)
  akses String @db.Text

  user User[]
}

model Lembaga {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nama     String   @db.VarChar(255)
  kategori Kategori

  user User[]
}

model LaporanKegiatan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tujuan                String         @db.Text
  deskripsi             String         @db.Text
  statusKegiatan        StatusKegiatan
  indikatorKeberhasilan String         @db.Text
  target                String         @db.Text
  jadwal                DateTime
  kebutuhanLogistik     String         @db.Text
  linkDokumen           String         @db.Text

  user    User @relation(fields: [user_id], references: [id])
  user_id Int
}

model Berita {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  judul     String @db.Text
  detail    String @db.Text
  linkPhoto String @db.Text

  user    User @relation(fields: [user_id], references: [id])
  user_id Int
}

model LaporanMasalah {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  masalah         String          @db.Text
  kategoriMasalah KategoriMasalah

  user    User? @relation(fields: [user_id], references: [id])
  user_id Int?
}
