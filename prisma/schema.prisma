// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Kategori {
  KEMENTRIAN
  PEMERINTAH_DAERAH
  LEMBAGA_SWADAYA_MASYARAKAT
  INSTITUSI_PENDIDIKAN
  DUNIA_USAHA
  MEDIA
  MASYARAKAT_TERDAMPAK
}

enum StatusKegiatan {
  BELUM_TERLAKSANA
  TAHAP_KOORDINASI
  SEDANG_BERJALAN
  SUDAH_TERLAKSANA
  SEDANG_TERKENDALA
}

enum KategoriMasalah {
  ADVOKASI
  EDUKASI
  PEMBERDAYAAN_MASYARAKAT
}

enum MetodePelaksanaan {
  DARING
  LURING
  HYBRID
  FOCUS_GROUP_DISCUSSION
  TALKSHOW
}

model Testing {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  namaLengkap   String  @db.VarChar(255)
  alamat        String  @db.VarChar(255)
  email         String  @unique @db.VarChar(255)
  noHandphone   String  @db.VarChar(255)
  linkFoto      String  @db.Text
  lembagaOthers String? @db.Text
  kecamatan     String  @db.VarChar(255)
  kelurahan     String  @db.VarChar(255)
  kodePos       String  @db.VarChar(255)
  password      String  @db.Text
  otp_token     String  @db.Text

  kegiatan LaporanKegiatan[]
  berita   Berita[]
  masalah  LaporanMasalah[]
  chat     Chat[]

  lembaga          Lembaga?      @relation(fields: [lembaga_id], references: [id])
  lembaga_id       Int?
  role             Role          @relation(fields: [role_id], references: [id])
  role_id          Int
  kabupatenKota    KabupatenKota @relation(fields: [kabupatenKota_id], references: [id])
  kabupatenKota_id Int

  kategori Kategori

  is_verified  Boolean @default(false)
  is_accepted  Boolean @default(false)
  is_activated Boolean @default(false)
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role  String @db.VarChar(255)
  akses String @db.Text

  user User[]
}

model Lembaga {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nama     String   @db.VarChar(255)
  kategori Kategori

  user User[]
}

model LaporanKegiatan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  namaKegiatan                String            @db.Text
  tujuan                      String            @db.Text
  deskripsi                   String            @db.Text
  statusKegiatan              StatusKegiatan
  bidangKegiatan              KategoriMasalah
  indikatorKeberhasilan       String            @db.Text
  jadwalMulai                 DateTime
  jadwalSelesai               DateTime
  kebutuhanLogistikTerpenuhi  String            @db.Text
  kebutuhanLogistikDibutuhkan String            @db.Text
  linkDokumen                 String            @db.Text
  metodePelaksanaan           MetodePelaksanaan
  keteranganTambahan          String?           @db.Text

  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  kabupatenKota    KabupatenKota @relation(fields: [kabupatenKota_id], references: [id])
  kabupatenKota_id Int
}

model Berita {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  judul     String @db.Text
  detail    String @db.Text
  linkPhoto String @db.Text

  user    User @relation(fields: [user_id], references: [id])
  user_id Int
}

model LaporanMasalah {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  masalah         String          @db.Text
  kategoriMasalah KategoriMasalah

  user        User?    @relation(fields: [user_id], references: [id])
  user_id     Int?
  kabupatenKota    KabupatenKota @relation(fields: [kabupatenKota_id], references: [id])
  kabupatenKota_id Int
}

model Provinsi {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nama String @db.VarChar(255)

  kabupatenKota  KabupatenKota[]
}

model KabupatenKota {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  nama String @db.VarChar(255)

  user            User[]
  laporanKegiatan LaporanKegiatan[]
  laporanMasalah  LaporanMasalah[]

  provinsi    Provinsi @relation(fields: [provinsi_id], references: [id])
  provinsi_id Int

}

model Chat {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pesan String @db.Text

  user User @relation(fields: [user_id], references: [id])
  user_id Int
}
